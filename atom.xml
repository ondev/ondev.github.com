<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Haven's' Blog]]></title>
  <link href="http://www.ifun.cc/atom.xml" rel="self"/>
  <link href="http://www.ifun.cc/"/>
  <updated>2014-02-11T21:22:22+08:00</updated>
  <id>http://www.ifun.cc/</id>
  <author>
    <name><![CDATA[Haven]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac下配置Mantis]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/11/mac-xia-pei-zi-mantis/"/>
    <updated>2014-02-11T11:24:19+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/11/mac-xia-pei-zi-mantis</id>
    <content type="html"><![CDATA[<p>安装我就不介绍了，与传统的php应用安装一样，放到对应的site目录下，然后在浏览器方问进行安装。
安装成功后会有红色的warning,</p>

<h3>去掉Warning</h3>

<p>然后修改phi.ini</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo vim /etc/php.ini</span></code></pre></td></tr></table></div></figure>


<p>中的值</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>date.timezone = Asia/Shanghai</span></code></pre></td></tr></table></div></figure>


<p>然后重启apache</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apachectl restart</span></code></pre></td></tr></table></div></figure>


<h3>中文支持</h3>

<p>修改config_defaults_inc.php</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$g_default_language      = 'chinese_simplified';</span></code></pre></td></tr></table></div></figure>


<p>如果想方便，你可以下载一键安装包
<a href="https://bitnami.com/stack/mantis/installer">https://bitnami.com/stack/mantis/installer</a></p>

<p>与svn的整合，我没有配置成功，还是介绍一下我所做的：
用到了mantis的<a href="https://github.com/mantisbt-plugins/source-integration">插件</a>
Mac自带的svn server，见参考。</p>

<p>有成功配置的朋友，希望能分享一下。</p>

<p>参考：
<a href="http://xiayong.blog.51cto.com/6292420/1088790">Mac下配置svn server</a>
<a href="https://github.com/mantisbt-plugins/source-integration">VCS plugs</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcconfig文件的用法]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/xcconfigwen-jian-de-yong-fa/"/>
    <updated>2014-02-09T11:24:19+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/xcconfigwen-jian-de-yong-fa</id>
    <content type="html"><![CDATA[<p>xcconfig文件正如其名字一样，就是xcode里的config文件。 我们在开发过程中，需要配置一些参数，这些都可以在xcode工程的setting对项目进行配置，xcconfig就是将这些配置项以文件的形式独立出来，方便共享与配置。比如两个项目用到相同的配置，那么只需要在xcode中选择对应的xcconfig文件即可，方便与灵活共享，所以今天需要向大家简单介绍一下。</p>

<p><img src="http://ww4.sinaimg.cn/large/6bf526ffgw1ed8jeos42pj20vg0brjts.jpg" alt="" /><br>
图所示的是我创建的一个工程，我们看iOS Deployment Target这一行下面的Debug与Release， 后面是空白的，即没有设置是哪一个iOS version.<br>
当然我们可以在xcode中进行设置，在这儿我要介绍通过xcconfig的方法设置。</p>

<p>首先我们创建一个Debug.xcconfig文件，名字随便起，只要你自己能区分就行了。方法与创建一个新文件类似<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1ed8jj9yo2sj20nw0f0mz7.jpg" alt="" /></p>

<p>接下来我们对Debug.xcconfig文件进行配置，如何进行配置呢，有个简单的方法，就是在xcode中将要配置的文件copy过来。
首先在xcode中选中要进行配置的一行，如图<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1ed8jntemnwj20tf03pwf3.jpg" alt="" />
然后command+c进行复制，接着到Debug.xcconfig中command+v粘贴。
粘贴的内容类似：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//:configuration = Debug
</span><span class='line'>IPHONEOS_DEPLOYMENT_TARGET = 6.0
</span><span class='line'>
</span><span class='line'>//:completeSettings = none</span></code></pre></td></tr></table></div></figure>


<p>在这儿我们想配置我们的项目支持iOS6的系统。</p>

<p>按照这个方法配置所有你想要配置的。</p>

<p>配置好Debug.xcconfig后，接下来我们使xcode加载它。直接上图，大家就明白了。<br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1ed8jstod1aj20vj0avgn3.jpg" alt="" />
注意图中选中项。</p>

<p>现在再到Target的Build setting中看iOS Deployment Target去看看，就多了一列了，Debug那一行设置就是6.0.<br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1ed8jz5qtswj20vo0bmacj.jpg" alt="" /></p>

<p>网上有人已奖基本的配置文件做出来了，你也就不需要一个一个去copy, parse了。<br>
可以参看github上的<a href="https://github.com/jspahrsummers/xcconfigs">xcconfigs</a></p>

<p>参考：
<a href="http://b2cloud.com.au/how-to-guides/using-a-xcconfig-file">http://b2cloud.com.au/how-to-guides/using-a-xcconfig-file</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Http URL Cache清除]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/ios-http-url-cacheqing-chu/"/>
    <updated>2014-02-09T11:23:10+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/ios-http-url-cacheqing-chu</id>
    <content type="html"><![CDATA[<p>三行代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[NSURLCache sharedURLCache] removeAllCachedResponses];
</span><span class='line'>[[NSURLCache sharedURLCache] setDiskCapacity:0];
</span><span class='line'>[[NSURLCache sharedURLCache] setMemoryCapacity:0];</span></code></pre></td></tr></table></div></figure>


<p>其实只需要第一行即可。</p>

<p>UIWebView中的cache也可以用此方法清除， 所有通过URL Loading System缓存的数据都可以清除。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LevelDB for iOS]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/leveldb-for-ios/"/>
    <updated>2014-02-09T11:20:55+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/leveldb-for-ios</id>
    <content type="html"><![CDATA[<p>最近NO SQL型数据库比较火，本人也想了解了解。于是找到了LevelDB这个数据库,它是一个KV型的数库据，还度那是杠杠的。于是试着用一下。</p>

<p>它是开源的，首先得编译它。网上已有很多人成功编译了它。<br>
首先就是下载源码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clone levelDB repo https://code.google.com/p/leveldb/</span></code></pre></td></tr></table></div></figure>


<p>这个工程里的mackfile就支持编译iOS平台，只不过很久有没有更新了，现在iOS7出来后，常用指令集分别是armv7,armv7s,arm64. 对于armv6我们可以放弃了，毕竟技术是在不断发展的，过时的就不要用了。
现在我们来修改Makefile, 主要就是去掉armv6, 然后增加armv7s与arm64.</p>

<p>定位到.cc.o的198行与.c.o的205行
修改为：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.cc.o:
</span><span class='line'>  mkdir -p ios-x86/$(dir $@)
</span><span class='line'>  $(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
</span><span class='line'>  mkdir -p ios-arm/$(dir $@)
</span><span class='line'>  xcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
</span><span class='line'>  lipo ios-x86/$@ ios-arm/$@ -create -output $@
</span><span class='line'>
</span><span class='line'>.c.o:
</span><span class='line'>  mkdir -p ios-x86/$(dir $@)
</span><span class='line'>  $(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
</span><span class='line'>  mkdir -p ios-arm/$(dir $@)
</span><span class='line'>  xcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk  -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
</span><span class='line'>  lipo ios-x86/$@ ios-arm/$@ -create -output $@</span></code></pre></td></tr></table></div></figure>


<p>保存，</p>

<p>然后用命令进行编译</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CXXFLAGS=-stdlib=libc++ make PLATFORM=IOS</span></code></pre></td></tr></table></div></figure>


<p>或</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CXXFLAGS=-stdlib=libstdc++ make PLATFORM=IOS</span></code></pre></td></tr></table></div></figure>


<p>都可以，由于用到了c++标准库，这儿分别用了新旧不同的库而已。libc++是支持c++ 11标准的，这儿分别对应xcode中引用的两个库ibc++.dylib与libstdc++.dylib两个库。</p>

<p>编译成功后，在源码根目录就会有一个libleveldb.a的库文件与include的头文件目录。然后就可以试用了。这儿我引用<a href="http://www.tanhao.me/pieces/1397.html">老谭</a>哥写好的wrapper，并写了一个for iOS的测试工程。
创建一个iOS的新工程，将libleveldb.a与include copy到工程目录中，然后将libleveldb.a拖到工程中，接着配置header查找目录，在xcode setting中的Header Search path中加入一行${SRCROOT}，它后面选择recursive， 表示在工程源码目录中递归遍历查找头文件。
<img src="http://user-image.logdown.io/user/6397/blog/6392/post/177919/9MjT1fJxRXCdmUCZgmio_Screen%20Shot%202014-02-04%20at%201.52.41%20pm.png" alt="Screen Shot 2014-02-04 at 1.52.41 pm.png" /></p>

<p>接着在AppDelegate.m中引入老潭的wrapper头文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import "THLevelDB.h"</span></code></pre></td></tr></table></div></figure>


<p>接着在didFinishLaunchingWithOptions中写测试代码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
</span><span class='line'>NSString *dbPath = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"leveldb_demo.ldb"];
</span><span class='line'>THLevelDB *db = [THLevelDB levelDBWithPath:dbPath];
</span><span class='line'>
</span><span class='line'>//存储字符串
</span><span class='line'>[db setString:@"成都" forKey:@"city"];
</span><span class='line'>
</span><span class='line'>//存储基本类型
</span><span class='line'>[db setInt:13579 forKey:@"count"];
</span><span class='line'>[db setFloat:30.2 forKey:@"temperature"];
</span><span class='line'>
</span><span class='line'>//存储Data数据
</span><span class='line'>NSData *data = [@"天府之国" dataUsingEncoding:NSUTF8StringEncoding];
</span><span class='line'>[db setData:data forKey:@"data"];
</span><span class='line'>
</span><span class='line'>//存储任意对象(实现了NSCoding协议的对象)
</span><span class='line'>[db setObject:[NSDate date] forKey:@"object"];
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>NSLog(@"城市:%@",[db stringForKey:@"city"]);
</span><span class='line'>NSLog(@"数量:%d",[db intForKey:@"count"]);
</span><span class='line'>NSLog(@"Data:%@",[db dataForKey:@"data"]);
</span><span class='line'>NSLog(@"对象:%@",[db objectForKey:@"object"]);</span></code></pre></td></tr></table></div></figure>


<p>测试工程<a href="https://github.com/ondev/LevelDBiOSDemo">传送门</a>。</p>

<p>参考：
<a href="http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/">http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/</a>
<a href="http://www.tanhao.me/pieces/1397.html">http://www.tanhao.me/pieces/1397.html</a>
<a href="http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/">http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PhpStorm调试xiuno BBS]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/phpstormdiao-shi-xiuno-bbs/"/>
    <updated>2014-02-09T11:13:37+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/phpstormdiao-shi-xiuno-bbs</id>
    <content type="html"><![CDATA[<p>上一篇文章里介绍了PhpStorm的开发环境配置，并能对单页面进行调试。今天我们介绍如何调试一个web application, 就拿一个开源的php源码来做试验：xiuno bbs.</p>

<p>首先当然是到下载入口下载xiuno bbs的源码。然后安装吧， Mac系统自带了Apache， 所以放到站点目录下，然后浏览器访问，就可以了。在安装的时候，数据库请选择pdo_mysql, 因为如果选择mysql用的比较老的mysql操作库，在调试的时候会提示出错。</p>

<p>这儿我以Mac系统为例，我假设你已安装apache默认站点根目录 /Library/WebServer/Documents/</p>

<p>安装好了，那我们就开始用PhpStorm创建工程，选择Create New Project from Existing Files <br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcyawfkcmj20m00gfdh1.jpg" alt="" /></p>

<p>选择xiuno源文件的目录。然后选择Project Root, 然后下一步变化可点击。<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcybhsqt7j20ob0hrjtm.jpg" alt="" /></p>

<p>接下来设置local http server. <br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcybzki5cj20od0hy3zw.jpg" alt="" /></p>

<p>接下来设置http server的path<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcyck053nj20oi0htta2.jpg" alt="" /></p>

<p>接下来设置运行环境<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcyd25tprj20tf0dl0u8.jpg" alt="" /></p>

<p>点击加号，然后选择Php Web Application, 因为xiuo bbs是一个web application. <br>
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcydh8g8rj20te0io0u6.jpg" alt="" /> <br>
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcye01oj7j20t80do3zi.jpg" alt="" /></p>

<p>名字任意，但是目前server后面是红色的，点击它后面的button进行设置 <br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcyelh5jaj20l20ett9l.jpg" alt="" /></p>

<p>点击Validate remote environment,然后选择刚才配置的Server, 然后点击下面的Validate, 如图 <br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcyf2vhrsj20f109gt9o.jpg" alt="" /></p>

<p>接着是http目录设置，如图 <br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcyfkbk74j20tg0igdha.jpg" alt="" /></p>

<p>这样你就可以通过PhoStorm运行或调试源码了。 <br>
xiuno的调试宏记得打开哟。 <br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcygccolzj21250d541f.jpg" alt="" /></p>

<p>我也开始学习PHP写程序了. ^v^</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AMR for iOS7]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/amr-for-ios7/"/>
    <updated>2014-02-09T11:12:12+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/amr-for-ios7</id>
    <content type="html"><![CDATA[<p>前不久重新编译了opencore amr. 环境是Xcode4.6.3+iOS6+opencore amr 0.1.3。</p>

<p>Xcode5+iOS7已出来有一段时间了</p>

<p>今天就来用iOS7＋Xcode5编译 opencore amr 0.1.3</p>

<p>还是以前的shell, 支持arm64平台。</p>

<p>我编译了一份库，<a href="https://github.com/ondev/AMR-for-iOS7">传送门</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下配置神器PhpStrom开发环境]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/macxia-pei-zhi-shen-qi-phpstromkai-fa-huan-jing/"/>
    <updated>2014-02-09T11:00:05+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/macxia-pei-zhi-shen-qi-phpstromkai-fa-huan-jing</id>
    <content type="html"><![CDATA[<p>php这么流行，不能不研究一下。首先得找到好用的工具，见网上大神们都推荐神器phpStorm，那我也追追风，下载了一个phpStorm 7.1。平时工作都是在mac系统，所以这儿只介绍mac系统神器的配置。</p>

<p>安装我就不用多说了嘛。<br>
安装成功后，接下来就运行。<br>
运行后当然是创建一个了新工程，简单一点，我们创建一个空工程。 刚才都说了，是空工程，那接着我们给它加点料，新建一个php文件，暂且命名为index.</p>

<p>接着我们给它点点内容，那是那样吧，最简单的，用helloworld.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;html&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>    &lt;title&gt;PHP 测试&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>&lt;?php echo '&lt;p&gt;Hello World&lt;/p&gt;'; ?&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<p>接着我们点击运行
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcxz9otroj20qf0ji413.jpg" alt="" /></p>

<p>会出现一个对话框
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcy003c4xj20iw0ikwgi.jpg" alt="" /></p>

<p>下面有一个error,是说没有找到php解释器。点击后面的Fix，会出现如下对话框：
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcy0tu5m7j20dk0i1dgj.jpg" alt="" /></p>

<p>看到了吧，解释器设置。 mac系统是默认安装了php的，目录是在/usr/bin,那么我们点击后面的button,然后指定php解释器目录。<br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcy1eg18oj20mx0ir3zn.jpg" alt="" /></p>

<p>配置好后点击ok。</p>

<p>配置好后，就有解释器了。<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcy2630cbj20d80htjrz.jpg" alt="" /></p>

<p>理论上这样配置就已完成了，可是如果你点击下图右边中的chrome图标<br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcy319hyfj20ws0jcgns.jpg" alt="" /></p>

<p>你将会看502错误，<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcy3qaz2mj20qu07r0sv.jpg" alt="" /></p>

<p>回到PhpStorm后，你会看到有一相警告，是说php-cgi没有找到<br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcy4ae661j20lc07wdga.jpg" alt="" /></p>

<p>解决方法就是自己安装php，不用mac安装，这样就有php开发环境了。 安装很简单，直接运行一个命令, 需要几分钟，请慢慢等待。<br></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -s http://php-osx.liip.ch/install.sh | bash -s 5.5</span></code></pre></td></tr></table></div></figure>


<p>新安装的php目录是/usr/local/php5/bin，接下来在PhpStorm中设置新安装的php解释器： PhpStorm->Preferences->PHP 会来到解释器设置页<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcy5cwpgaj20y40mvtbk.jpg" alt="" /></p>

<p>设置我们安装的php解释器：/usr/local/php5/bin<br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcy5zj6k8j20mx0iqgmv.jpg" alt="" /></p>

<p>这下配置完成，把鼠标放到PhpStorm右边区域，然后点击你电脑上安装了的浏览器，就会打开浏览器显示index.php的内容<br>
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcy6kpunej206r04imwy.jpg" alt="" /></p>

<p>如果想从网页中触发进行调试，需要安装插件。我用的是chrome, 需要安装<a href="https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc">Xdebug helper</a></p>

<p>到此，神器PhpStorm for Mac已配置完成，可以开始你的php之旅了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装xiuno论坛]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/an-zhuang-xiunolun-tan/"/>
    <updated>2014-02-09T10:33:51+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/an-zhuang-xiunolun-tan</id>
    <content type="html"><![CDATA[<p>最近想开一个论坛，于是找了一些常用bbs开源框架，比较成熟的有Discuz, phpWind… 无意间看到有人推荐xiuno, 特点是小巧，速度快。由于我不想建一个大型的论坛，所以选择了速度与小巧的xiuno.</p>

<p>首先是下载<a href="http://bbs.xiuno.com/thread-index-fid-2-tid-4159.htm">程序</a>. 解压放到你的站点目录。 然后在浏览器里定位到你的bbs目录，就会提示你进行安装，如果没有出现，则是因为你的文件目录没有写权限 修改权限命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod -R 777 ./xiuno </span></code></pre></td></tr></table></div></figure>


<p>安装成功后，进入后台，看到有一个警告。php.ini 中未设置 upload_tmp_dir，可能会导致上传失败。</p>

<p>我的vps是unbuntu的系统，所以到/etc/php5/apache2目录下修入php.ini, 将upload_tmp_dir前面的;号去掉，;号表示注释。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> sudo vim php.ini 
</span><span class='line'> ``` 
</span><span class='line'>如果是Mac系统，php.ini的目录是/etc, 下面有一个php.ini.default文件 
</span></code></pre></td></tr></table></div></figure>


<p>
cp php.ini.default php.ini sudo vim php.ini
&#8220;`</p>

<p>一个vps如果要想建多个站，那么需要设置virtual host. 请先配置好virtual host，然后再进行站点安装，否则会出错，大家一定注意。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新知识汇总]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/ios7xin-zhi-shi-hui-zong/"/>
    <updated>2014-02-09T10:24:48+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/ios7xin-zhi-shi-hui-zong</id>
    <content type="html"><![CDATA[<p>iOS7给我们带来了好多东西，表示我们将有新东西要学习了，在此记录一些网上的教程，方便自己与大家学习。</p>

<p>iOS7 CoreBluetooth</p>

<p><a href="http://www.doubleencore.com/2013/09/whats-new-in-bluetooth-le-ios-7/">http://www.doubleencore.com/2013/09/whats-new-in-bluetooth-le-ios-7/</a><br>
<a href="https://developer.apple.com/library/ios/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html">CoreBluetooth</a></p>

<p>iOS7 Feature</p>

<p><a href="http://blog.bignerdranch.com/3899-uikit-dynamics-and-ios-7-building-uikit-pong/">iOS7 UIKit Dynamics 1</a> <br>
<a href="http://www.raywenderlich.com/50197/uikit-dynamics-tutorial">iOS7 UIKit Dynamics 2</a><br>
<a href="http://www.raywenderlich.com/42699/spritekit-tutorial-for-beginners">iOS7 Sprint Kit</a> <br>
<a href="http://blog.bignerdranch.com/3784-javascriptcore-and-ios-7/">iOS7 JavascriptCore</a><br>
<a href="http://www.raywenderlich.com/51127/nsurlsession-tutorial">iOS7 NSURLSession</a><br>
<a href="http://www.raywenderlich.com/50151/text-kit-tutorial">iOS7 Text Kit</a></p>

<p>iBeacon</p>

<p><a href="http://redbearlab.com/ibeacon/">http://redbearlab.com/ibeacon/</a> <br>
<a href="http://www.devfright.com/ibeacons-tutorial-ios-7-clbeaconregion-clbeacon/">http://www.devfright.com/ibeacons-tutorial-ios-7-clbeaconregion-clbeacon/</a> <br>
<a href="http://maniacdev.com/2013/10/example-an-app-using-the-new-ios-7-ibeacon-api">http://maniacdev.com/2013/10/example-an-app-using-the-new-ios-7-ibeacon-api</a></p>

<p>iOS7 Multipeer Connectivity</p>

<p><a href="http://techmaster.vn/2013/09/multipeer-connectivity-quick-tutorial/">http://techmaster.vn/2013/09/multipeer-connectivity-quick-tutorial/</a></p>

<p>Other iOS7 Tutorial</p>

<p><a href="http://www.shinobicontrols.com/blog/posts/2013/09/19/introducing-ios7-day-by-day/">http://www.shinobicontrols.com/blog/posts/2013/09/19/introducing-ios7-day-by-day/</a><br>
<a href="https://github.com/shu223/iOS7-Sampler">https://github.com/shu223/iOS7-Sampler</a><br>
<a href="http://www.doubleencore.com/2013/09/essential-ios-7-developers-guide/">http://www.doubleencore.com/2013/09/essential-ios-7-developers-guide/</a><br>
<a href="http://www.objc.io/issue-5/">http://www.objc.io/issue-5/</a><br>
<a href="http://www.captechconsulting.com/blog-tags/ios">iOS7 Tutorial Series</a></p>

<p>如果你有更好的教程请补充。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DeckView在iOS7中的bug]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/deckviewzai-ios7zhong-de-bug/"/>
    <updated>2014-02-09T00:52:32+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/deckviewzai-ios7zhong-de-bug</id>
    <content type="html"><![CDATA[<p>前面有两篇文件介绍了适配iOS7的工作，也总结了其最主要的改变就是view全屏模式的布局方式。
我iOS开发的朋友可能用过<a href="https://github.com/Inferis/ViewDeck">ViewDeck</a>这个库，它可以做出类似facebook那样的左右滑动的效果。当你升级到iOS7后，将会有一些问题。这篇文章将介绍我遇到的问题及解决方法。</p>

<p>首先，我说说我用viewdeck的ui布局， window的rooterViewController是一个UITabBarViewController, 然后IIViewDeckController是UITabBarViewController的子view. 然后每一个IIViewDeckController的left,center是UINavigationController. 还有一点需要说明， UITabBar的background Image是自定义的一张图片。</p>

<p>这样的布局在iOS6上显示正常的，在iOS7 3.5 retina的Simulator上显示也是正常的，但是在iPhone4s上显示不正确了，IIViewDeckController的left与center的view高度刚好少44。也就是说这个问题只会在设备上出现。我debug了一下，发现造成这个问题的原因是UITabBar自定义了背景图片，如果不自定义则ok.但是我们的程序是需要自定义UITabBar的背景的。由于我看到刚好少了44px,所以我就试着在IIViewDeckController的viewDidLoad中加了一句代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        self.extendedLayoutIncludesOpaqueBars = YES;
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>这样就可以成功运行了。 这句话的意思就是，是否延升到Tabbar区域。默认是NO的，由于Tabbar是44px,这样修改刚好可以fix这个问 但是最让我费解的就是在Simulator上没有这个问题，在Device上有问题，不过问题总算解决了。</p>

<p>我也把我做的测试工程放到了<a href="https://github.com/ondev/TestViewDeck">GitHub</a>, 大家可以下载分别运行到Simulator与Device, 然后把上面代码注释掉再运行做比较。 我的开发环境是:Version 5.0 (5A1413) + iOS7</p>

<p>如果你的测试结果与我不一样，请告诉我</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7隐藏status Bar]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/ios7yin-cang-status-bar/"/>
    <updated>2014-02-09T00:49:11+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/ios7yin-cang-status-bar</id>
    <content type="html"><![CDATA[<p>iOS7中，状态栏变化比较大，hide/show状态的方法也不一样了。 在iOS7以前的版本，hide是通过以下代码实现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationSlide];
</span></code></pre></td></tr></table></div></figure>


<p>在iOS7中默认情况下，这个方法不成功了。到setStatusBarHidden:withAnimation:声明的头文件去看看，多了一句注释： // Setting statusBarHidden does nothing if your application is using the default UIViewController-based status bar system. 现在在iOS7中，status bar的外观默认依赖UIViewController, 也就是说status bar随UIViewController的不同而不同。在这种默认的方式下，用全局的方法setStatusBarHidden:withAnimation:是行不通的。</p>

<p>解决方法是在infor.plist中加入key:UIViewControllerBasedStatusBarAppearance 并设置其值为NO，这样就告诉系统，status bar不依赖于UIViewController. 这样就可以通过上面的方法来hiden status bar.</p>

<p>如果是在默认情况下，如果我们要hiden如何办呢。</p>

<p>只需要实现两个新方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (UIStatusBarStyle)preferredStatusBarStyle
</span><span class='line'>{
</span><span class='line'>    return UIStatusBarStyleLightContent;
</span><span class='line'>    //UIStatusBarStyleDefault = 0 黑色文字，浅色背景时使用
</span><span class='line'>  //UIStatusBarStyleLightContent = 1 白色文字，深色背景时使用
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (BOOL)prefersStatusBarHidden
</span><span class='line'>{
</span><span class='line'>    return NO; //返回NO表示要显示，返回YES将hiden
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>上面一个回调方法返回status bar显示时候的样式，下面一个回调控制是否显示status bar.</p>

<p>调用下面的一行代码将会触发上面的回调</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[self setNeedsStatusBarAppearanceUpdate];</span></code></pre></td></tr></table></div></figure>


<p>如果想在hiden/show之间有点动画效果，用下面的代码即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[UIView animateWithDuration:0.5 animations:^{
</span><span class='line'>        [self setNeedsStatusBarAppearanceUpdate];
</span><span class='line'>    }];</span></code></pre></td></tr></table></div></figure>


<p>现在介绍完毕在iOS7下操作status bar.如有问题，欢迎大家指正。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[适配iOS7开发2]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/09/gua-pei-ios7kai-fa-2/"/>
    <updated>2014-02-09T00:34:13+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/09/gua-pei-ios7kai-fa-2</id>
    <content type="html"><![CDATA[<p>在前一篇文章中介绍了非autolayout模式下iOS7的适配工作。 今天来介绍一下autolayout下的适配工作。<br></p>

<p>首先，我们用xcode4.6.3创建一个simgle view application. 选中Use storyboard.<br>
拖一个UIButton到view中。 由于开启了autoLayout， 在xcode4.6.3中，自动会有两个auto layout约束，分别是水平与垂直的约束：
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcfz58ucgj20o00a40u0.jpg" alt="" /></p>

<p>运行程序效果：
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcfzva8w4j20hs0vkjrm.jpg" alt="" /></p>

<p>可以看到是垂直方向上距status bar底部是45px，距右边是186px.<br>
现在我们用xcode5打开这个工程。会提示Upgrade storyboard，我们点击Upgrade. Upgrade后，你会发现，垂直方向上有变化了，约束是从顶部开始，不是从status bar底部开始计算。这也我们想要的结果不一样，我们还是希望约束是从status bar底部开始计算。<br>
仔细看看storyboard中的View Controller， 你会发现，这儿多了两个东东，分别是Top Layout Guide，Bottom Layout Guide. <br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcg16hbatj20ny0adaal.jpg" alt="" /></p>

<p>选在我们的button,按住control键，然后拖到Top Layout Guide上，在弹出的对话框选择Vertical spacing
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcg1x4fjij204n03bmx3.jpg" alt="" /></p>

<p>这样又建立了一个垂直约束，你会发现这个约束是从Status bar底部开始计算的。这个约束有点像是我们需要的，
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcg2i341lj20mt0a7wf4.jpg" alt="" /></p>

<p>但是这个约束距status bar是25px,我们想要的是45px. 那只需要修改一下，将25px改为45px
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcg36ji0xj20vk09fmy3.jpg" alt="" /></p>

<p>你会发现有storyboard中有红色提示，这说明约束条件发生了冲突，因为垂直约束的值都为45，显示冲突了。由于我们只需要status bar底部开始计算的那个约束，所以我们将旧的那个删掉即可。
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcg3vzbylj20nj0akt97.jpg" alt="" /></p>

<p>现在分别选择iOS6/iOS7来运行。都是距status bar下面45px显示button. 适配工程完成。<br>
顺便介绍一下xcode5中，用xib或storyboard布局的时候，preview iOS7与iOS7以前版本的效果。 快捷键：option+command+enter 打开Assistant editor,然后选择右边的automatic->preview->xxxxx(preview)
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1edcg4xvwgnj20fi0fcabq.jpg" alt="" /></p>

<p>然后在出现的画面下面有一个切换iOS7与以前版本的切换开关
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcg5lktzgj20ca0l6t9c.jpg" alt="" /></p>

<p>这样可以方例你实时的查看布局效果以适配不同版本的iOS.<br>
最后： auto layout是好东西，虽然只有>iOS6的版本才支持，但是我还是建意大家用auto layout,因为以后苹果也可能出现多种屏幕，到时候代码修改量将会减少。</p>

<p>参考：<a href="https://developer.apple.com/library/ios/qa/qa1797/_index.html">https://developer.apple.com/library/ios/qa/qa1797/_index.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[适配iOS7开发1]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/gua-pei-ios7kai-fa-1/"/>
    <updated>2014-02-08T23:02:24+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/gua-pei-ios7kai-fa-1</id>
    <content type="html"><![CDATA[<p>iOS7可以说是苹果一次革命性的变化，这样做为一个开发者需要做的事也不少。首先苹果的view布局有所变化，现在view默认是全屏模式，而所有的bar(navigation bar, tool bar, search bars 与scope bars都是半透明)，status bar则是全透明。有了这样的改变，写代码的时候就有我们折腾的了。 本文所说的适配是指：用xcode5+iOS7sdk编译的程序能正常的运行在iOS6及以下的设备上。</p>

<p>首先看一个例子，用xcode5创建一个Empty Application的工程， 然后新建一个继承UIViewController的类，并将这个类的一个实例做为window的rootViewController. 现在运行程序，将会看到一个空白页。 现在我们向里面加点东西。 在viewDidLoad中加入以下代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>self.view.backgroundColor = [UIColor grayColor];
</span><span class='line'>UIButton *btn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
</span><span class='line'>btn.frame = CGRectMake(0, 0, 100, 44);
</span><span class='line'>btn.layer.cornerRadius = 0;
</span><span class='line'>btn.layer.borderColor = [UIColor blackColor].CGColor;
</span><span class='line'>btn.layer.borderWidth = 1;
</span><span class='line'>[btn setTitle:@"Test" forState:UIControlStateNormal];
</span><span class='line'>[self.view addSubview:btn];</span></code></pre></td></tr></table></div></figure>


<p>现在运行，你将会看到在屏幕最顶处有一个黑色边框的button.
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcdvo2yn4j20hs0vkgls.jpg" alt="" /></p>

<p>注意没，是与statusBar重叠了。
下面我们做一些修改，修改AppDelegate中的window的rootViewController值：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ViewController *vc = [[ViewController alloc] init];
</span><span class='line'>UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:vc];
</span><span class='line'>self.window.rootViewController = nav;</span></code></pre></td></tr></table></div></figure>


<p>再运行，程序，你将看到
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcdwv6tt7j20hs0vkq34.jpg" alt="" /></p>

<p>我们的button到哪儿去了，其实它是被Navigation Bar档住了。细心的读者可能会问，你刚才不是说了Navigation Bar是半透明的吗？即然是半透明的为何我看不到button呢？ 的确Navigation Bar是半透明的，不过透明度不高，然后看不清后成的button.如果你不相信，你可以再一个黑色的view看看效果。将下面代码放入viewDidLoad</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UIView *v = [[UIView alloc] initWithFrame:CGRectMake(100, 0, 100, 70)];
</span><span class='line'>v.backgroundColor = [UIColor blackColor];
</span><span class='line'>[self.view addSubview:v];</span></code></pre></td></tr></table></div></figure>


<p>然后运行，看看效果：
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcdyrmfs4j20hs0vkdg1.jpg" alt="" /></p>

<p>现在可以清楚的看到Navigation Bar后面的view， 可以看到，UIViewController的view是全屏的坐标系了。<br>
这样与我们iOS6与以前的坐标不一样了，以前是从Navigation Bar底部开始计算y值的，现在却是从Status Bar开始计算y值。<br>
不要着急，苹果公司有解决方案：将下面代码放在viewDidLoad中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>self.edgesForExtendedLayout = UIRectEdgeNone;</span></code></pre></td></tr></table></div></figure>


<p>再运行，看看效果：
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcebwcwusj20hs0vkmxe.jpg" alt="" /></p>

<p>现在坐标就是开始从Navigation Bar开始计算了。然而这种情况只适合在Navigation Bar的情况，如果没有Navigation Bar, 坐标仍然是从Status Bar顶部开始计算的。<br>
如果底部有Tab Bar的情况呢，如果要兼容以前的frame设置，那么就需要设置UIViewController的edgesForExtendedLayout为UIRectEdgeNone。<br></p>

<h3>代码如何适配iOS7</h3>

<p>如果我们的代码没有用storyboard, 没有用xib,纯代码的情况，如果要适配iOS7，那么上面只是介绍了有Navigation Bar, Tool Bar的情况，如果只是单纯的View,那么我们的代码运行在iOS7上，会有向上20px偏移，这需要手动修改：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        self.view.bounds = CGRectMake(0, -20, self.view.frame.size.width, self.view.frame.size.height );
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>这种方法需要对所有的UIViewController进行设置，比较麻烦，还有一种较为简单的方法，就是设置window，这样可以影响所有的subview, 参考自<a href="http://stackoverflow.com/questions/18294872/ios-7-status-bar-back-to-ios-6-style/18855464#18855464">stackoverflow</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        [application setStatusBarStyle:UIStatusBarStyleLightContent];
</span><span class='line'>        self.window.clipsToBounds =YES;
</span><span class='line'>        self.window.frame =  CGRectMake(0,20,self.window.frame.size.width,self.window.frame.size.height-20);
</span><span class='line'>        
</span><span class='line'>        //Added on 19th Sep 2013
</span><span class='line'>        self.window.bounds = CGRectMake(0, 20, self.window.frame.size.width, self.window.frame.size.height);
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>下面是第二方法的运行效果：
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edceixx3bmj20hs0vkaab.jpg" alt="" /></p>

<p>不过第二种方法有问题，当你Rotate Simulator的时候你将会看到问题，Status Bar位置将不动。所以我不推荐用第二种方法，可以写一个UIViewController的category方法，然后调用方法一中的代码。这样对全工程进行修改以适配iOS7.</p>

<h3>下面介绍一下xib的方法</h3>

<p>新建一个UIViewController的子类，叫TestViewController，选中创建xib文件 然后，在在AppDelegate中将window的rootViewController换成我们新建的TestViewController实例，代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>TestViewController *vc2 = [[TestViewController alloc] init];
</span><span class='line'>self.window.rootViewController = vc2;</span></code></pre></td></tr></table></div></figure>


<p>用xcode4.6.3+ios6运行程序，
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edceozre4oj20hs0vkjrg.jpg" alt="" /></p>

<p>现在我们在xib中拖入一个button，frame为(177, 0, 73, 44)
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edces84tk0j20ny0bhwg9.jpg" alt="" />
由于iOS7中扁平化设计了，button没有了边框，等一下我们会用xcode5+ios7来运行本程序，为了更清楚的看清frame，在此我将button的边框显示出来，前面代码生成的button也是显示了边框的，我们关系一个UIButton的变量textBtn到代码中,并用代码再生成一个button</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_testBtn.layer.borderWidth = 1;
</span><span class='line'>UIButton *btn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
</span><span class='line'>btn.frame = CGRectMake(0, 0, 100, 44);
</span><span class='line'>btn.layer.cornerRadius = 0;
</span><span class='line'>btn.layer.borderColor = [UIColor blackColor].CGColor;
</span><span class='line'>btn.layer.borderWidth = 1;
</span><span class='line'>[btn setTitle:@"Test" forState:UIControlStateNormal];
</span><span class='line'>[self.view addSubview:btn];</span></code></pre></td></tr></table></div></figure>


<p>运行程序，效果如下：
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcf3ld7s9j20hs0vkjrp.jpg" alt="" /></p>

<p>关闭xocde4.5与Simulator,然后用xcode5打开用iOS7的效果：
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcf5nev3lj20hs0vk74i.jpg" alt="" /></p>

<p>对比可以看出，iOS7是全屏的模式。 这样一来，从iOS6中升级过来的程序，布局就不正确了，有20px的偏移，上面介绍了用代码解决的方法，在这儿我们先用代码的方法来试试，在viewWillAppear中加入以下代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        self.view.bounds = CGRectMake(0, -20, self.view.frame.size.width, self.view.frame.size.height );
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>再运行程序，效果如下：
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcf8ajwtmj20hs0vkglu.jpg" alt="" /></p>

<p>其中代码加入的button，下移了20px, 可是xib中拖入的button还是以status bar顶为y＝0开始计算frame.这可能是由于我们用到了auto layout, 所以xib有自己的frame计算方式. 代码生成的没有用auto layout约束，则受到了上面代码的影响。 我们在xocde5中选择xib，如果是xcode4.6创建的xib, xcode5会提示你升级，我们选择升级，如果你选择了忽略也没关系，可以在右边的open in下拉列表中选择xcode5. xcode5对xib做了很多优化，相比以前的xib，xcode5的xib文件不但小，而且功能更强大。 我们禁用xib的autolayout试试，再运行：
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcf93kryej20hs0vkdg2.jpg" alt="" /></p>

<p>这下由于没有auto layout的作用，都开始从status bar下面开始计算frame了。</p>

<p>如果你的程序view全是xib，没有用代码生成，那么这儿还有一种解决方法，原因是xib中没有开启autolayout)不用代码控制self.view.bounds,所以我们先将viewWillAppear中的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        self.view.bounds = CGRectMake(0, -20, self.view.frame.size.width, self.view.frame.size.height );
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>删掉。</p>

<p>然后在在xcode5中选择我们的xib，并选择view中拖入的button，选择它的Size inspector,如图：
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcffnqm5uj20vo0cygmt.jpg" alt="" /></p>

<p>细心的你可能发现了，右边较之前的版本多一些内容。多了一个ios6/ios7 Deltas.它就是用来做iOS6的xib适配到iOS7用的东西。 由于iOS7中，全屏的模式，所以我们需要设置我们的＋20,这样才从status bar底部开始显示。现在我们将我们的button的y值设为20.如图：<br>
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcfgu9hj7j208909tq3e.jpg" alt="" /></p>

<p>xcode5+ios7运行效果：
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1edcfj5xunjj20hs0vkgls.jpg" alt="" /></p>

<p>由于它的frame是从20开始的，细心的读者可能会有疑问了，如果我们运行在iOS7以前的设备上，由于frame是从20开始的，不是我们想要的效果。的确是这样的，下面是iOS6上运行的效果：
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcfll9kvjj20hs0vk74d.jpg" alt="" /></p>

<p>是从status bar下面20px.
也就是说适配工作不成功。 等等，刚才我们说的ios6/ios7 Deltas,现在是时候出场了。 现在我们在将Deltas中y值设为-20.<br>
<img src="http://ww2.sinaimg.cn/large/6bf526ffgw1edcfmtk3swj20780a3jrv.jpg" alt="" /></p>

<p>再运行到iOS6的设备上，效果如下：
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1edcfnfg3qmj20hs0vkaaa.jpg" alt="" /></p>

<p>小结： 从iOS7以前的工程适配到iOS7，且没有用autolayout,<br>
1.在viewDidLoad中加入以下代码完成短配工作</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 7) {
</span><span class='line'>        self.view.bounds = CGRectMake(0, -20, self.view.frame.size.width, self.view.frame.size.height );
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>2.xib中用调整frame的y值+20，并设置Delats中y为-20. 如果是代码生成的view,则需要手动处理subview的frame的y值，所以都在原来基础上+20</p>

<p>最后我们要记住一点：iOS7默认是全屏的。 所以得有两套值。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS常用宏]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/ioschang-yong-hong/"/>
    <updated>2014-02-08T22:58:09+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/ioschang-yong-hong</id>
    <content type="html"><![CDATA[<p>最近整理了一下代码，发现iOS下开发用过不少宏。在此汇总一下，大部份来自网络，方便大家使用。</p>

<p><a href="https://gist.github.com/ondev/6714742#file-gistfile1-txt">传送门</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS获取ISO Country Code]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/ioshuo-qu-iso-country-code/"/>
    <updated>2014-02-08T22:54:47+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/ioshuo-qu-iso-country-code</id>
    <content type="html"><![CDATA[<p>通过SIM卡获取country code,下面是代码片段</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSString *(^CountryNameByISO)(NSString *) = ^(NSString *iso) {
</span><span class='line'>    NSLocale *locale = [NSLocale currentLocale];
</span><span class='line'>    return [locale displayNameForKey:NSLocaleCountryCode value:iso];
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>NSString *(^ISOCountryCodeByCarrier)() = ^() {
</span><span class='line'>    CTTelephonyNetworkInfo *networkInfo = [[CTTelephonyNetworkInfo alloc] init];
</span><span class='line'>    CTCarrier *carrier = [networkInfo subscriberCellularProvider];
</span><span class='line'>    return [carrier isoCountryCode];
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>#define SIMISO                  ISOCountryCodeByCarrier()
</span><span class='line'>#define CountryNameFromISO(iso) CountryNameByISO(iso)</span></code></pre></td></tr></table></div></figure>


<p>这样就可以通过两个宏进行调用了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NSString *iso  ＝ ISOCountryCodeByCarrier();
</span><span class='line'>NSString *name ＝ CountryNameFromISO(iso);</span></code></pre></td></tr></table></div></figure>


<p>还有一种，是获取Device本地设置的地区。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define countryISO  [[NSLocale currentLocale] objectForKey: NSLocaleCountryCode]</span></code></pre></td></tr></table></div></figure>


<p>下面是获取本地设置的语言</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define languageISO [[NSLocale currentLocale] objectForKey: NSLocaleLanguageCode]</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AMR for iOS]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/amr-for-ios/"/>
    <updated>2014-02-08T22:53:05+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/amr-for-ios</id>
    <content type="html"><![CDATA[<p>三年前（2011），我编译了opencore-amr，由于版本与iOS sdk的更新，可能大家用的时候有些麻烦了。今天我又重新编译了一下opencore-amr for iOS,然后将Demo放到了<a href="https://github.com/ondev/AMRDemoForiOS">Github</a></p>

<p>加入了一些新内容，具体请看DEMO,有不明白的可以留言。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parse Json to Objective_C Model]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/parse-json-to-objective-c-model/"/>
    <updated>2014-02-08T22:51:42+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/parse-json-to-objective-c-model</id>
    <content type="html"><![CDATA[<p>在开发server/client的移动应用程序时候，往往用json来转输数据。 最近用空闲时间写了一个根据json自动生成Objectiv_c的源码程序。原理是借鉴WSDL2Objc的源码，用到了STSTemplateEngine. 源码托管在Github:<a href="https://github.com/ondev/Json2Objc">Json2Objc</a></p>

<p>运行程序，然后有三个需要指定的东西：需要指定json文件，生成的文件的存放路径，生成文件的名字。</p>

<p>然后parse，如果没有错误发生，就会在Finder中打开生成的目录。</p>

<p>如何用生成的文件，可以参看参看TestCase。</p>

<p>有任何不明白的地方请留言。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下常用工具]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/macxia-chang-yong-gong-ju/"/>
    <updated>2014-02-08T22:46:53+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/macxia-chang-yong-gong-ju</id>
    <content type="html"><![CDATA[<h2>在此列一些mac下的常用工具</h2>

<p>Omnigraffle</p>

<p><a href="http://www.omnigroup.com/download/latest/omnigrafflepro.dmg">Omnigraffle</a>这个不用多说，就是mac下的viso 这儿列出的是5.2.1版本。 <br>
name:<a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#112;&#114;&#97;&#116;&#x65;&#122;&#64;&#x72;&#117;&#x6c;&#x65;&#x2e;&#110;&#x65;&#x74;">&#x70;&#114;&#x61;&#x74;&#101;&#122;&#64;&#114;&#x75;&#108;&#101;&#46;&#110;&#101;&#116;</a> <br>
sn:kbpo-nsye-jpmt-pjie-jpcl-xem</p>

<p>Charles</p>

<p>支持Mac与Windows,通过代理的方式可以抓取http/https包。这样可以用来分析iOS上运行的程序的通信包。还可以修改通信的response包。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python语法快速学习]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/pythonyu-fa-kuai-su-xue-xi/"/>
    <updated>2014-02-08T22:45:10+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/pythonyu-fa-kuai-su-xue-xi</id>
    <content type="html"><![CDATA[<p>最近学习了一下，python，算是如门了吧。 看的是：<a href="http://woodpecker.org.cn/abyteofpython_cn/chinese/">简明python教程</a>。 这个教程主要讲的是python的语法，由于我比较熟悉c/c++，所以python的语法很轻松。 看了python，才知道python这语言的语法是如此的简单。我用过java,javascript, erlang, lua, php, python是最好用的一门语言了，有一种相见恨晚的感觉。</p>

<p>最爽的就是不需要{}来说明作用域 其它的都与c/c++差不多了。</p>

<p>用这门语言可以快速开发demo产品，特别是对于移动应用的开发。</p>

<p>下一步就要经常用用python来处理生活中的问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make iOS Framework]]></title>
    <link href="http://www.ifun.cc/blog/2014/02/08/make-ios-framework/"/>
    <updated>2014-02-08T22:42:06+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/02/08/make-ios-framework</id>
    <content type="html"><![CDATA[<p>制作framework的好处不用再说，网上也有相应的方法介绍。今天我在此总结一下常用的方法。</p>

<h3>1.用模板</h3>

<p>下载<a href="https://github.com/kstenerud/iOS-Universal-Framework">xcode模板</a>后按照教程安装模板，安装后就可以用xcode创建生成framework的项目工程。这种方法简单易用，没有什么难度。</p>

<h3>2.用static library生成</h3>

<p>这种方法是用脚本将.a文件与头文件，包装成.framework的文件格式。 脚本与步骤在<a href="https://github.com/jverkoey/iOS-Framework">这儿</a>都有详细介绍。 但是还有一步，需要做，就是将工种设置中的Build Active Architecture Only 设为NO, 否则生成的.framework 会提示找不到armv7s</p>

<h3>3.用bundle模拟</h3>

<p>这个方法也是用脚本的方法，组装bundle为framewrok. 大家直接看<a href="http://jaym2503.blogspot.sg/2012/09/how-to-create-custom-ios-framework.html">教程</a></p>

<p>这三种方法都试了，我比较喜欢用第二种方式，因为它的来龙去脉都比较清晰，知道.framework是如何生成的。</p>
]]></content>
  </entry>
  
</feed>
