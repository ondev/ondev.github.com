<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Haven's Blog]]></title>
  <link href="http://www.ifun.cc/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.ifun.cc/"/>
  <updated>2015-10-23T09:35:40+08:00</updated>
  <id>http://www.ifun.cc/</id>
  <author>
    <name><![CDATA[Haven]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[编译opencore-amr for iOS8并支持bitcode]]></title>
    <link href="http://www.ifun.cc/blog/2015/10/23/bian-yi-opencore-amr-for-ios8bing-zhi-chi-bitcode/"/>
    <updated>2015-10-23T09:27:30+08:00</updated>
    <id>http://www.ifun.cc/blog/2015/10/23/bian-yi-opencore-amr-for-ios8bing-zhi-chi-bitcode</id>
    <content type="html"><![CDATA[<p>由于很多网友向我反应，<a href="http://www.ifun.cc/blog/2014/02/09/amr-for-ios7/">这儿</a>这个编译脚本不能成功编译iOS8的库，所以在空闲时间搞了一下, 让其支持iOS8与bitcode.</p>

<p>直接上菜</p>

<p>```</p>

<h1>!/bin/sh</h1>

<p>set -xe</p>

<p>VERSION=&ldquo;0.1.3&rdquo;
SDKVERSION=&ldquo;8.4&rdquo;
LIBSRCNAME=&ldquo;opencore-amr&rdquo;</p>

<p>CURRENTPATH=<code>pwd</code></p>

<p>mkdir -p &ldquo;${CURRENTPATH}/src&rdquo;
tar zxvf ${LIBSRCNAME}&ndash;${VERSION}.tar.gz -C &ldquo;${CURRENTPATH}/src&rdquo;
cd &ldquo;${CURRENTPATH}/src/${LIBSRCNAME}&ndash;${VERSION}&rdquo;</p>

<p>DEVELOPER=<code>xcode-select -print-path</code>
DEST=&ldquo;${CURRENTPATH}/lib-ios&rdquo;
mkdir -p &ldquo;${DEST}&rdquo;</p>

<p>ARCHS=&ldquo;armv7 armv7s arm64 i386 x86_64&rdquo;</p>

<h1>ARCHS=&ldquo;armv7&rdquo;</h1>

<p>LIBS=&ldquo;libopencore-amrnb.a libopencore-amrwb.a&rdquo;</p>

<p>DEVELOPER=<code>xcode-select -print-path</code></p>

<p>for arch in $ARCHS; do
case $arch in
arm*)</p>

<p>IOSV=&ldquo;-miphoneos-version-min=7.0&rdquo;
if [ $arch == &ldquo;arm64&rdquo; ]
then
IOSV=&ldquo;-miphoneos-version-min=7.0&rdquo;
fi</p>

<p>echo &ldquo;Building for iOS $arch ****************&rdquo;
SDKROOT=&ldquo;$(xcrun &mdash;sdk iphoneos &mdash;show-sdk-path)&rdquo;
CC=&ldquo;$(xcrun &mdash;sdk iphoneos -f clang)&rdquo;
CXX=&ldquo;$(xcrun &mdash;sdk iphoneos -f clang++)&rdquo;
CPP=&ldquo;$(xcrun -sdk iphonesimulator -f clang++)&rdquo;
CFLAGS=&ldquo;-isysroot $SDKROOT -arch $arch $IOSV -isystem $SDKROOT/usr/include -fembed-bitcode&rdquo;
CXXFLAGS=$CFLAGS
CPPFLAGS=$CFLAGS
export CC CXX CFLAGS CXXFLAGS CPPFLAGS</p>

<p>./configure \
&mdash;host=arm-apple-darwin \
&mdash;prefix=$DEST \
&mdash;disable-shared &mdash;enable-static
;;
<em>)
IOSV=&ldquo;-mios-simulator-version-min=7.0&rdquo;
echo &ldquo;Building for iOS $arch</em>****************&rdquo;</p>

<p>SDKROOT=<code>xcodebuild -version -sdk iphonesimulator Path</code>
CC=&ldquo;$(xcrun -sdk iphoneos -f clang)&rdquo;
CXX=&ldquo;$(xcrun -sdk iphonesimulator -f clang++)&rdquo;
CPP=&ldquo;$(xcrun -sdk iphonesimulator -f clang++)&rdquo;
CFLAGS=&ldquo;-isysroot $SDKROOT -arch $arch $IOSV -isystem $SDKROOT/usr/include -fembed-bitcode&rdquo;
CXXFLAGS=$CFLAGS
CPPFLAGS=$CFLAGS
export CC CXX CFLAGS CXXFLAGS CPPFLAGS
./configure \
&mdash;prefix=$DEST \
&mdash;disable-shared
;;
esac
make > /dev/null
make install
make clean
for i in $LIBS; do
mv $DEST/lib/$i $DEST/lib/$i.$arch
done
done</p>

<p>for i in $LIBS; do
input=&ldquo;&rdquo;
for arch in $ARCHS; do
input=&ldquo;$input $DEST/lib/$i.$arch&rdquo;
done
lipo -create -output $DEST/lib/$i $input
done
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac iOS推送测试]]></title>
    <link href="http://www.ifun.cc/blog/2015/09/21/mac-iostui-song-ce-shi/"/>
    <updated>2015-09-21T12:37:32+08:00</updated>
    <id>http://www.ifun.cc/blog/2015/09/21/mac-iostui-song-ce-shi</id>
    <content type="html"><![CDATA[<p>今天给大家介绍一个自己写的iOS推送测试程序，在Mac下有一个同类产品PushMeBaby,它使用的是.cer证书。一般我们都使用p12文件来保存证书与密钥，所以我写了一个用p12文件来测试推送的App,命名为EasyPush. <a href="https://github.com/ondev/EasyPush">源码在此</a>，感兴趣的朋友可以拿来看看。</p>

<p>使用到的第三方库有:<a href="https://github.com/robbiehanson/CocoaAsyncSocket">CocoaAsyncSocket</a></p>

<p>库依赖管理:<a href="https://github.com/Carthage/Carthage">Carthage</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS自动化测试]]></title>
    <link href="http://www.ifun.cc/blog/2015/03/30/ioszi-dong-hua-ce-shi/"/>
    <updated>2015-03-30T09:21:53+08:00</updated>
    <id>http://www.ifun.cc/blog/2015/03/30/ioszi-dong-hua-ce-shi</id>
    <content type="html"><![CDATA[<p>给一些关键字，有时间再详细补上</p>

<p>MonkeyTalk</p>

<p>FruitStrap</p>

<p>ynma3k</p>

<p>Athrun</p>

<p>tuneup</p>

<p>InstrumentsDriver</p>

<p>ULAutomation</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[拯救越狱白苹果]]></title>
    <link href="http://www.ifun.cc/blog/2015/03/28/zheng-jiu-yue-yu-bai-ping-guo/"/>
    <updated>2015-03-28T10:39:06+08:00</updated>
    <id>http://www.ifun.cc/blog/2015/03/28/zheng-jiu-yue-yu-bai-ping-guo</id>
    <content type="html"><![CDATA[<p>今天要一大早，太操蛋了，好久没玩越狱了，用了一个重启命令</p>

<p><code>
killall -HUP SpringBoard
</code>
结果成了白苹果了。</p>

<p>然后我在ssh中用reboot重启，还是白苹果，最后用Home+开机键关机后重启还是不能解决。</p>

<h2>重刷系统</h2>

<p>首先强制关机Home+Power键
然后按一直按住Power键，直到屏上出现白苹果时(不要松开Power键)再按住Home键，当屏幕黑屏后松开Power键(Home键不要松)，直到电脑ITunes上有反应时才松开。</p>

<p>如果不成功多次几次，顺序是Power->Power+Home->Home，先按先放，后按后放的原则，理一下过程就清楚了。<br></p>

<p>当ITunes检测到Recovery Mode，Mac系统上按住Option键(Windows上按Shift键)并点击Restore，在弹出的对话框中选你下载的iOS固件(ipsw文件)，然后就是等待了。</p>

<h2>安全模式</h2>

<p>1、如果遭遇循环重启或白苹果，同时按住电源键和 Home 键<br>
2、当苹果 Logo 出现又消失后松开两个键<br>
3、同时按住电源键和音量增加键开机<br>
4、当苹果 Logo 出现时，松开电源键，但一直按住音量增加键直至启动完成<br>
5、前往 Cydia 卸载所有你认为和循环重启有关的插件<br>
6、如果问题未能解决重复以上五步<br>
7、问题解决</p>

<p>我只知道这两种解决白苹果，如果你有更好的方法还望告之。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSOpenDev配置]]></title>
    <link href="http://www.ifun.cc/blog/2014/09/22/iosopendevpei-zhi/"/>
    <updated>2014-09-22T16:43:25+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/09/22/iosopendevpei-zhi</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<h3>配置</h3>

<p>首先我们安装iOSOpenDev, 直接下载最新的进行安装，如果有错，可以参看<a href="https://github.com/kokoabim/iOSOpenDev/wiki/Troubleshoot">这儿</a>。</p>

<p>越狱开发需要TheOS环境，而iOSOpenDev也是建立在TheOS的基础上的，只不过用iOSOpenDev我们就可以使用我们熟悉的Xcode进行开发了。所以我们还需要安装TheOS.打开命令行，直接运行下面命令进行安装</p>

<p><code>
export THEOS=/opt/theos
git clone git://github.com/DHowett/theos.git $THEOS
</code></p>

<p>利用iOSOpenDev, 我们只需要简单command+shift+i就可以将程序布置到设备上了。这个过程需要ssh连接，所以我们还需要配置ssh钥匙对。只需要一条命令即可：</p>

<p><code>
iosod sshkey -h 192.168.1.1
</code>
192.168.1.1是你设备的地址，记住，你设备上一定要开启ssh哦。</p>

<p>iOSOpenDev的官方文档都在<a href="https://github.com/kokoabim/iOSOpenDev/wiki/_pages">这儿</a>，你可以再研究研究。</p>

<p>接下来，我们需要dump出来的iOS header, 比如我们要hook SpringBoard. 大家可以自行dump出header，也可以到网上下载已经dump好了的。我就是直接<a href="https://github.com/MP0w/iOS-Headers">这儿</a>下载的。将下载好的头文件放到/opt/theos/include目录下。</p>

<h3>Hello Word</h3>

<p>现在一切都准备好了，那我们来进行我们的Hello Word.
创建一个logos Tweak工程。接着在Build Settings中iOSOpenDevDevice设置为自己设备的IP地址，设备与你的Mac要在一个局域网内。</p>

<p>由于我们需要引用头文件，所以还需要在Build Settings中将Header Search Paths中加一行/opt/theos/include</p>

<p>下面我们实现hook SpringBoard，当SPringBoard启动的时候，我们就弹出一个Alert.</p>

<p>在.xm中加以下代码.</p>

<p>```</p>

<h1>import &lt;SpringBoard/SpringBoard.h></h1>

<p>%hook SpringBoard</p>

<ul>
<li><p>(void)applicationDidFinishLaunching:(id)application {
  %orig;</p>

<p>  UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&ldquo;Welcome&rdquo;
                                                  message:@&ldquo;Welcome to your iPhone!&rdquo;
                                                 delegate:nil
                                        cancelButtonTitle:@&ldquo;Thanks&rdquo;
                                        otherButtonTitles:nil];
  [alert show];
  [alert release];
}</p></li>
</ul>


<p>%end
```</p>

<p>由于用到了UIAlertView属于UIKit的东西，所以我们要链接UIKit.framework, 还有hook的库文件libsubstrate.dylib(在opt/iOSOpenDev/lib目录下面)。</p>

<p>中以command+B进行编译，一定会报错，下面列出我遇到的错。</p>

<p>1.找不到NSObject.h <br>
将#import &ldquo;NSObject.h&rdquo; 改为#import &lt;NSFoundation/NSObject.h>
2.一些不能识别的数据类型，我将期改为id类型。</p>

<p>进行一些修改，直到编译不报错为止。</p>

<p>Command+Shift+i  将程序布署到设备上，SpringBoard会重启，重启后是不是看到Alert？ 没看到？ 那你一定哪儿错了，重新再来一遍吧，如果还不行，那我也帮不了你，只有去求神了。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
</feed>
