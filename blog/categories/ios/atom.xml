<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Haven's Blog]]></title>
  <link href="http://www.ifun.cc/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.ifun.cc/"/>
  <updated>2015-03-13T13:27:39+08:00</updated>
  <id>http://www.ifun.cc/</id>
  <author>
    <name><![CDATA[Haven]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOSOpenDev配置]]></title>
    <link href="http://www.ifun.cc/blog/2014/09/22/iosopendevpei-zhi/"/>
    <updated>2014-09-22T16:43:25+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/09/22/iosopendevpei-zhi</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<h3>配置</h3>

<p>首先我们安装iOSOpenDev, 直接下载最新的进行安装，如果有错，可以参看<a href="https://github.com/kokoabim/iOSOpenDev/wiki/Troubleshoot">这儿</a>。</p>

<p>越狱开发需要TheOS环境，而iOSOpenDev也是建立在TheOS的基础上的，只不过用iOSOpenDev我们就可以使用我们熟悉的Xcode进行开发了。所以我们还需要安装TheOS.打开命令行，直接运行下面命令进行安装</p>

<p><code>
export THEOS=/opt/theos
git clone git://github.com/DHowett/theos.git $THEOS
</code></p>

<p>利用iOSOpenDev, 我们只需要简单command+shift+i就可以将程序布置到设备上了。这个过程需要ssh连接，所以我们还需要配置ssh钥匙对。只需要一条命令即可：</p>

<p><code>
iosod sshkey -h 192.168.1.1
</code>
192.168.1.1是你设备的地址，记住，你设备上一定要开启ssh哦。</p>

<p>iOSOpenDev的官方文档都在<a href="https://github.com/kokoabim/iOSOpenDev/wiki/_pages">这儿</a>，你可以再研究研究。</p>

<p>接下来，我们需要dump出来的iOS header, 比如我们要hook SpringBoard. 大家可以自行dump出header，也可以到网上下载已经dump好了的。我就是直接<a href="https://github.com/MP0w/iOS-Headers">这儿</a>下载的。将下载好的头文件放到/opt/theos/include目录下。</p>

<h3>Hello Word</h3>

<p>现在一切都准备好了，那我们来进行我们的Hello Word.
创建一个logos Tweak工程。接着在Build Settings中iOSOpenDevDevice设置为自己设备的IP地址，设备与你的Mac要在一个局域网内。</p>

<p>由于我们需要引用头文件，所以还需要在Build Settings中将Header Search Paths中加一行/opt/theos/include</p>

<p>下面我们实现hook SpringBoard，当SPringBoard启动的时候，我们就弹出一个Alert.</p>

<p>在.xm中加以下代码.</p>

<p>```</p>

<h1>import &lt;SpringBoard/SpringBoard.h></h1>

<p>%hook SpringBoard</p>

<ul>
<li><p>(void)applicationDidFinishLaunching:(id)application {
  %orig;</p>

<p>  UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&ldquo;Welcome&rdquo;
                                                  message:@&ldquo;Welcome to your iPhone!&rdquo;
                                                 delegate:nil
                                        cancelButtonTitle:@&ldquo;Thanks&rdquo;
                                        otherButtonTitles:nil];
  [alert show];
  [alert release];
}</p></li>
</ul>


<p>%end
```</p>

<p>由于用到了UIAlertView属于UIKit的东西，所以我们要链接UIKit.framework, 还有hook的库文件libsubstrate.dylib(在opt/iOSOpenDev/lib目录下面)。</p>

<p>中以command+B进行编译，一定会报错，下面列出我遇到的错。</p>

<p>1.找不到NSObject.h <br>
将#import &ldquo;NSObject.h&rdquo; 改为#import &lt;NSFoundation/NSObject.h>
2.一些不能识别的数据类型，我将期改为id类型。</p>

<p>进行一些修改，直到编译不报错为止。</p>

<p>Command+Shift+i  将程序布署到设备上，SpringBoard会重启，重启后是不是看到Alert？ 没看到？ 那你一定哪儿错了，重新再来一遍吧，如果还不行，那我也帮不了你，只有去求神了。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Auto Layout的坑]]></title>
    <link href="http://www.ifun.cc/blog/2014/07/23/shi-yong-auto-layoutde-keng/"/>
    <updated>2014-07-23T17:40:05+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/07/23/shi-yong-auto-layoutde-keng</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<p>最近在研究iOS8, 用beta版的xcode创建了一个swift项目，由于iOS8加入了size classes的概念，所以当然要用这先进东西了。</p>

<p>创建了一个tabbar的工程，试着在storyboard中研究它，发于UITextView这个控件在w(Compact), h(Regular)iPhone竖屏的情况下，字符显示不完整（如下图所以，好像UITextView的frame比较小）。最开始以为是constraints的问题，仔细看了一下，没有发现constraints有问题。
<img src="http://ww1.sinaimg.cn/large/6bf526ffgw1eimvr8u4eoj20v40zo75u.jpg" alt="" /><br></p>

<p>由于强迫症严重，所以总感觉这样不太对。 最后终于找到了，原来是没有设置Editable属性。只需要在storyboard属性栏中将其勾中就ok了。</p>

<p><img src="http://ww2.sinaimg.cn/large/6bf526ffgw1eimvucfa68j20eq0go767.jpg" alt="" /> <br></p>

<p>下在是不是看着顺眼多了？ ^V^</p>

<p><img src="http://ww1.sinaimg.cn/large/6bf526ffgw1eimvvwb33aj20t20v0dhf.jpg" alt="" /> <br></p>

<p>然后我试着运行工程，看结果，发现第二个tab中UITextView中的字符不见了。
<img src="http://ww4.sinaimg.cn/large/6bf526ffgw1eimvz0q0xwj20gw0vo0ta.jpg" alt="" /> <br>
这是为什么呢？</p>

<p>经研究发现是constraints的Placeholder属性勾中了。<br>
<img src="http://ww3.sinaimg.cn/large/6bf526ffgw1eimw0ph1taj20dy0ceab9.jpg" alt="" /> <br></p>

<p>Placeholder就是占位的意思，在编译的时候就会去掉这个Constraint. 由于去掉了Constraint,那么就不无决定它的frame, 结果就显示不出来了。</p>

<p>有了这个属性，那么就可以在storyboard或xib中先用了个constraints来占位，可以去掉警告， 方便代码加Constraints的朋友使用。</p>

<p>虽然用Auto Layout有一段时间了，但是这些细节还不是很清楚，还得慢慢吸收。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Jailbreak Dev准备工作]]></title>
    <link href="http://www.ifun.cc/blog/2014/07/11/ios-jailbreak-devzhun-bei-gong-zuo/"/>
    <updated>2014-07-11T16:58:09+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/07/11/ios-jailbreak-devzhun-bei-gong-zuo</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<p>安全越来越重要了，所以我也在开始着手研究iOS安全。iOS的安全很大一部份是在iOS越狱的基础上进行的，所以对基设备进行越狱，并准备向安全领域进军。</p>

<p>1.iOS越狱设备，这我就不多说了,(有风险，自行承担)
2.在iOS越狱设备上安装openssh, SBSettings, BigBoss Recommended tools, MobileTerminal,这些可以通过Cydia安装</p>

<p>下面安装clutch,class-dump-z</p>

<p><code>
ssh root@you ios device ip
apt-get upgrade
wget http://networkpx.googlecode.com/files/class-dump-z_0.2a.tar.gz
tar -xvzf class-dump-z_0.2a.tar.gz
cd iphone_armv6
cp class-dump-z /usr/bin
chmod 777 /usr/bin/class-dump-z
</code>
可以用sftp将clutch上传到iOS设备里。Clutch在<a href="https://github.com/KJCracks/Clutch">这儿</a>哦</p>

<p>从appstore上下载的app是加了密的，加了密的app，class-dump-z就无能为力了，所以需要clutch将基解密。</p>

<p>以2048为例</p>

<p><code>
clutch 2048
cd /User/Documents/Cracked
unzip /User/Documents/Cracked/2048.ipa -d 2048
class-dump-z 2048/Payload/2048.app/2048 &gt; class-info-2048
</code></p>

<p>3.在Mac上安装theOS,iOSOpenDev,Cycript</p>

<p>就这些了，以后再加用到的。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义iOS上双击Home键App切屏]]></title>
    <link href="http://www.ifun.cc/blog/2014/07/10/zi-ding-yi-iosshang-shuang-ji-homejian-appqie-ping/"/>
    <updated>2014-07-10T16:34:06+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/07/10/zi-ding-yi-iosshang-shuang-ji-homejian-appqie-ping</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<p>在iOS7上，如果双击Home，会来到iOS App的switcher页面，在这儿列出了当前系统挂起的App, 上面有每个App的切屏，相信大家都熟悉这个东东了。它其实是每个App在挂起前，对App截屏。</p>

<p>那么我们如何自定义它在App Switcher上的展示呢，明白了它其实是对App的截屏，那么在它快进入后台的时候，我们改变其外观，那么截下来的图片，不就改变了吗？</p>

<p>明白这个原理后，那我们就试一试。</p>

<p>新建一个工程，准备三张图片，Defautl.png, Defautl@2x.png, Default-568h@2x.png,  将其放进工程。</p>

<p>我们在AppDelegate.h中声明一个UIImageView变量</p>

<p>```
@interface AppDelegate : UIResponder <UIApplicationDelegate> {</p>

<pre><code>UIImageView *screenShotView;
</code></pre>

<p>}</p>

<p>@property (strong, nonatomic) UIWindow *window;</p>

<p>@end
```</p>

<p>接着在AppDelegate中加入以下代码:</p>

<p>```
&ndash; (void)applicationWillResignActive:(UIApplication *)application
{</p>

<pre><code>if (!screenShotView) {
    screenShotView = [[UIImageView alloc]initWithFrame:[self.window frame]];
    [screenShotView setImage:[UIImage imageNamed:@"Default-568h"]];
    [self.window addSubview:screenShotView];
}
screenShotView.alpha = 1;
</code></pre>

<p>}</p>

<ul>
<li>(void)applicationDidBecomeActive:(UIApplication *)application
{
  screenShotView.alpha = 0;
}
```</li>
</ul>


<p>先在模拟器上删除以app,然后再点xcode run.  双击Home, 这下你是不是在App Switcher中看到了你的Default的图片，将上面的代码中Default-568h改为其它图片, 这样达到了自定义目的, 是不是太简单了呀？</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个基于Nodejs的简单iOS MDM服务]]></title>
    <link href="http://www.ifun.cc/blog/2014/07/08/%5B%3F%5D-ge-ji-yu-nodejsde-jian-dan-ios-mdmfu-wu/"/>
    <updated>2014-07-08T18:57:37+08:00</updated>
    <id>http://www.ifun.cc/blog/2014/07/08/[?]-ge-ji-yu-nodejsde-jian-dan-ios-mdmfu-wu</id>
    <content type="html"><![CDATA[<blockquote><p>本站QQ技术群:&lt;疯狂IT人>93916004</p></blockquote>

<p>如果有效的管理自己的iOS移动设备，苹果为我们提供了MDM技术。最近小弟在研究它，有一点小经验，写了一个简单的iOS MDM服务, 服务器采用Nodejs＋Mongodb.</p>

<p>大家可以试用一下,请直接<a href="https://www.sohoin.com">猛击这儿</a>(记得用设备的safari打开)进入。</p>

<p>首先需要大家注册一个帐号，密码与帐号是管理你设备所需的。</p>

<p>登陆进系统后，会有两步需要你完成，一是点击安装mdm描述文件，安装成功后请进行第二步，安装udid获取描述文件，第二步会获取你设备UDID, 并加入到你的管理列表中，这样你以后就可以对其进行管理。</p>

<p>完成上面两步后就可以看到下面多了两列命令，一个是锁屏，一个是清除密码。目前只支持这两个命令，后续会慢慢加入。</p>

<p>界在很丑呀，有空美化一下，换衣大家提意见。</p>

<blockquote><p>时间仓促，难免有不少错误，还往指正。</p></blockquote>
]]></content>
  </entry>
  
</feed>
